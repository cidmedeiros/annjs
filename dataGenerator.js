class Data2d{
    //Constructor
    constructor(nPoints){
        this.x = [];
        this.y = [];
        for (let i = 0; i < nPoints; i++){
            this.x.push(Math.floor(Math.random() * nPoints));
            this.y.push(Math.floor(Math.random() * nPoints));
        }
    }
    //Points
    points(){
        //Labels the point accordingly to its category
        let points = []
        for (let i = 0; i < this.x.length; i++){
            if (this.x[i] > this.y[i]){
                points.push({x:this.x[i], y:this.y[i], label:1})
            }else {
                points.push({x:this.x[i], y:this.y[i], label:-1})
            }
        }
        return points;
    }
    //Build graphical objects
    //Not bound to the data generated by the objects so it can plot any data no matter the origin
    plot(points,c1, c2){
        let plotPoints = [];
        for (let i = 0; i < points.length; i++){
            let somePoint = {
                x : [],
                y : [],
                name : '',
                legendgroup: '',
                text: [],
                mode: 'markers',
                marker: {
                    color: 'rgb(0, 0, 255)',
                    opacity: 0.5,
                    size: 20,
                    line: {
                        color: 'rgb(0, 0, 255)',
                        width: 2
                    }
                }
            }
            if (points[i].label == 1){
                somePoint.x = [points[i].x];
                somePoint.y = [points[i].y];
                somePoint.name = c1;
                somePoint.legendgroup = c1;
                somePoint.text = [`${points[i].x}-${points[i].y}-L(${points[i].label})`];
                plotPoints.push(somePoint);
            } else {
                somePoint.x = [points[i].x];
                somePoint.y = [points[i].y];
                somePoint.name = c2;
                somePoint.legendgroup = c2;
                somePoint.text = [`${points[i].x}-${points[i].y}-L(${points[i].label})`];
                somePoint.marker.color = 'rgb(0, 128, 0)';
                somePoint.marker.line.color = 'rgb(0, 128, 0)';
                plotPoints.push(somePoint);
            }
        }
        return plotPoints;
    }

    changeColor(point){
        //it expects a plotable setup point
        point.marker = {
            color: 'rgb(255,0, 0)',
            size: 25,
            line: {
                color: 'rgb(255,0,0)',
                width: 2
            }
        }
        return point;
    }
}

module.exports = Data2d